{"ast":null,"code":"'use strict';\n\nvar utils = require('./utils');\n\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar PROTECTION_PREFIX = /^\\)\\]\\}',?\\n/;\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {\n      return data;\n    }\n\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n\n    return data;\n  }],\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      data = data.replace(PROTECTION_PREFIX, '');\n\n      try {\n        data = JSON.parse(data);\n      } catch (e) {\n        /* Ignore */\n      }\n    }\n\n    return data;\n  }],\n  timeout: 0,\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n  maxContentLength: -1,\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\nutils.forEach(['delete', 'get', 'head'], function forEachMehtodNoData(method) {\n  defaults.headers[method] = {};\n});\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\nmodule.exports = defaults;","map":{"version":3,"sources":["C:/Users/kbzdz/Documents/currency/Biblioteka/library/node_modules/axios/lib/defaults.js"],"names":["utils","require","normalizeHeaderName","PROTECTION_PREFIX","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","headers","value","isUndefined","getDefaultAdapter","adapter","XMLHttpRequest","process","defaults","transformRequest","data","isFormData","isArrayBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","toString","isObject","JSON","stringify","transformResponse","replace","parse","e","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","common","forEach","forEachMehtodNoData","method","forEachMethodWithData","merge","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar PROTECTION_PREFIX = /^\\)\\]\\}',?\\n/;\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      data = data.replace(PROTECTION_PREFIX, '');\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMehtodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n"]},"metadata":{},"sourceType":"script"}