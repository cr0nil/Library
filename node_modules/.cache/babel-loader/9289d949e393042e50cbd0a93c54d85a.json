{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kbzdz\\\\Documents\\\\currency\\\\Biblioteka\\\\library\\\\src\\\\LibraryScreen.js\";\n\n// import React, { Component } from 'react';\n// import './App.css';\n// /*\n// Screen:LoginScreen\n// Loginscreen is the main screen which the user is shown on first visit to page and after\n// hitting logout\n// */\n// import LoginScreen from './Loginscreen';\n// /*\n// Module:Material-UI\n// Material-UI is used for designing ui of the app\n// */\n// import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\n// import AppBar from 'material-ui/AppBar';\n// import RaisedButton from 'material-ui/RaisedButton';\n// import Drawer from 'material-ui/Drawer';\n// import MenuItem from 'material-ui/MenuItem';\n// import FontIcon from 'material-ui/FontIcon';\n// import {blue500, red500, greenA200} from 'material-ui/styles/colors';\n// /*\n// Module:Dropzone\n// Dropzone is used for local file selection\n// */\n// import Dropzone from 'react-dropzone';\n// var apiBaseUrl = \"http://localhost:4000/api/\";\n// /*\n// Module:superagent\n// superagent is used to handle post/get requests to server\n// */\n// var request = require('superagent');\nclass UploadScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      role: 'uÅ¼ytkownik'\n    };\n  }\n\n  componentWillMount() {}\n  /*\r\n  Function:handleCloseClick\r\n  Parameters: event,index\r\n  Usage:This fxn is used to remove file from filesPreview div\r\n  if user clicks close icon adjacent to selected file\r\n  */\n\n\n  handleCloseClick(event, index) {\n    // console.log(\"filename\",index);\n    var filesToBeSent = this.state.filesToBeSent;\n    filesToBeSent.splice(index, 1); // console.log(\"files\",filesToBeSent);\n\n    var filesPreview = [];\n\n    for (var i in filesToBeSent) {\n      filesPreview.push( /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, filesToBeSent[i][0].name, /*#__PURE__*/React.createElement(MuiThemeProvider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"#\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(FontIcon, {\n        className: \"material-icons customstyle\",\n        color: blue500,\n        onClick: event => this.handleCloseClick(event, i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }, \"clear\")))));\n    }\n\n    this.setState({\n      filesToBeSent,\n      filesPreview\n    });\n  }\n  /*\r\n  Function:onDrop\r\n  Parameters: acceptedFiles, rejectedFiles\r\n  Usage:This fxn is default event handler of react drop-Dropzone\r\n  which is modified to update filesPreview div\r\n  */\n\n\n  onDrop(acceptedFiles, rejectedFiles) {\n    // console.log('Accepted files: ', acceptedFiles[0].name);\n    var filesToBeSent = this.state.filesToBeSent;\n\n    if (filesToBeSent.length < this.state.printcount) {\n      filesToBeSent.push(acceptedFiles);\n      var filesPreview = [];\n\n      for (var i in filesToBeSent) {\n        filesPreview.push( /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }\n        }, filesToBeSent[i][0].name, /*#__PURE__*/React.createElement(MuiThemeProvider, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: \"#\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(FontIcon, {\n          className: \"material-icons customstyle\",\n          color: blue500,\n          styles: {\n            top: 10\n          },\n          onClick: event => this.handleCloseClick(event, i),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }\n        }, \"clear\")))));\n      }\n\n      this.setState({\n        filesToBeSent,\n        filesPreview\n      });\n    } else {\n      alert(\"You have reached the limit of printing files at a time\");\n    } // console.log('Rejected files: ', rejectedFiles);\n\n  }\n  /*\r\n    Function:handleClick\r\n    Parameters: event\r\n    Usage:This fxn is handler of submit button which is responsibel fo rhandling file uploads\r\n    to backend\r\n  */\n\n\n  handleClick(event) {\n    // console.log(\"handleClick\",event);\n    this.setState({\n      printingmessage: \"Please wait until your files are being printed\",\n      printButtonDisabled: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: event => this.handleDivClick(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, \"You can print upto \", this.state.printcount, \" files at a time since you are \", this.state.role), /*#__PURE__*/React.createElement(Dropzone, {\n      onDrop: files => this.onDrop(files),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, \"Try dropping some files here, or click to select files to upload.\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, \"Files to be printed are:\", this.state.filesPreview)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, this.state.printingmessage), /*#__PURE__*/React.createElement(MuiThemeProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(RaisedButton, {\n      disabled: this.state.printButtonDisabled,\n      label: \"Print Files\",\n      primary: true,\n      style: style,\n      onClick: event => this.handleClick(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 12\n      }\n    }))));\n  }\n\n}\n\nconst style = {\n  margin: 15\n};\nexport default UploadScreen;","map":{"version":3,"sources":["C:/Users/kbzdz/Documents/currency/Biblioteka/library/src/LibraryScreen.js"],"names":["UploadScreen","Component","constructor","props","state","role","componentWillMount","handleCloseClick","event","index","filesToBeSent","splice","filesPreview","i","push","name","blue500","setState","onDrop","acceptedFiles","rejectedFiles","length","printcount","top","alert","handleClick","printingmessage","printButtonDisabled","render","handleDivClick","files","style","margin"],"mappings":"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","sourcesContent":["// import React, { Component } from 'react';\r\n// import './App.css';\r\n// /*\r\n// Screen:LoginScreen\r\n// Loginscreen is the main screen which the user is shown on first visit to page and after\r\n// hitting logout\r\n// */\r\n// import LoginScreen from './Loginscreen';\r\n// /*\r\n// Module:Material-UI\r\n// Material-UI is used for designing ui of the app\r\n// */\r\n// import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\n// import AppBar from 'material-ui/AppBar';\r\n// import RaisedButton from 'material-ui/RaisedButton';\r\n// import Drawer from 'material-ui/Drawer';\r\n// import MenuItem from 'material-ui/MenuItem';\r\n// import FontIcon from 'material-ui/FontIcon';\r\n// import {blue500, red500, greenA200} from 'material-ui/styles/colors';\r\n\r\n\r\n// /*\r\n// Module:Dropzone\r\n// Dropzone is used for local file selection\r\n// */\r\n// import Dropzone from 'react-dropzone';\r\n// var apiBaseUrl = \"http://localhost:4000/api/\";\r\n// /*\r\n// Module:superagent\r\n// superagent is used to handle post/get requests to server\r\n// */\r\n// var request = require('superagent');\r\n\r\nclass UploadScreen extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      role:'uÅ¼ytkownik',\r\n\r\n    }\r\n  }\r\n  componentWillMount(){\r\n \r\n  }\r\n  /*\r\n  Function:handleCloseClick\r\n  Parameters: event,index\r\n  Usage:This fxn is used to remove file from filesPreview div\r\n  if user clicks close icon adjacent to selected file\r\n  */ \r\n  handleCloseClick(event,index){\r\n    // console.log(\"filename\",index);\r\n    var filesToBeSent=this.state.filesToBeSent;\r\n    filesToBeSent.splice(index,1);\r\n    // console.log(\"files\",filesToBeSent);\r\n    var filesPreview=[];\r\n    for(var i in filesToBeSent){\r\n      filesPreview.push(<div>\r\n        {filesToBeSent[i][0].name}\r\n        <MuiThemeProvider>\r\n        <a href=\"#\"><FontIcon\r\n          className=\"material-icons customstyle\"\r\n          color={blue500}\r\n          onClick={(event) => this.handleCloseClick(event,i)}\r\n        >clear</FontIcon></a>\r\n        </MuiThemeProvider>\r\n        </div>\r\n      )\r\n    }\r\n    this.setState({filesToBeSent,filesPreview});\r\n  }\r\n  /*\r\n  Function:onDrop\r\n  Parameters: acceptedFiles, rejectedFiles\r\n  Usage:This fxn is default event handler of react drop-Dropzone\r\n  which is modified to update filesPreview div\r\n  */\r\n  onDrop(acceptedFiles, rejectedFiles) {\r\n      // console.log('Accepted files: ', acceptedFiles[0].name);\r\n      var filesToBeSent=this.state.filesToBeSent;\r\n      if(filesToBeSent.length < this.state.printcount){\r\n        filesToBeSent.push(acceptedFiles);\r\n        var filesPreview=[];\r\n        for(var i in filesToBeSent){\r\n          filesPreview.push(<div>\r\n            {filesToBeSent[i][0].name}\r\n            <MuiThemeProvider>\r\n            <a href=\"#\"><FontIcon\r\n              className=\"material-icons customstyle\"\r\n              color={blue500}\r\n              styles={{ top:10,}}\r\n              onClick={(event) => this.handleCloseClick(event,i)}\r\n            >clear</FontIcon></a>\r\n            </MuiThemeProvider>\r\n            </div>\r\n          )\r\n        }\r\n        this.setState({filesToBeSent,filesPreview});\r\n      }\r\n      else{\r\n        alert(\"You have reached the limit of printing files at a time\")\r\n      }\r\n\r\n      // console.log('Rejected files: ', rejectedFiles);\r\n}\r\n/*\r\n  Function:handleClick\r\n  Parameters: event\r\n  Usage:This fxn is handler of submit button which is responsibel fo rhandling file uploads\r\n  to backend\r\n*/\r\nhandleClick(event){\r\n  // console.log(\"handleClick\",event);\r\n  this.setState({printingmessage:\"Please wait until your files are being printed\",printButtonDisabled:true})\r\n\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n          <div onClick={(event) => this.handleDivClick(event)}>\r\n          <center>\r\n          <div>\r\n            You can print upto {this.state.printcount} files at a time since you are {this.state.role}\r\n          </div>\r\n\r\n          <Dropzone onDrop={(files) => this.onDrop(files)}>\r\n                <div>Try dropping some files here, or click to select files to upload.</div>\r\n          </Dropzone>\r\n          <div>\r\n          Files to be printed are:\r\n          {this.state.filesPreview}\r\n          </div>\r\n          </center>\r\n          <div>\r\n          {this.state.printingmessage}\r\n          </div>\r\n      <MuiThemeProvider>\r\n           <RaisedButton disabled={this.state.printButtonDisabled} label=\"Print Files\" primary={true} style={style} onClick={(event) => this.handleClick(event)}/>\r\n      </MuiThemeProvider>\r\n          </div>\r\n          </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst style = {\r\n  margin: 15,\r\n};\r\n\r\nexport default UploadScreen;"]},"metadata":{},"sourceType":"module"}