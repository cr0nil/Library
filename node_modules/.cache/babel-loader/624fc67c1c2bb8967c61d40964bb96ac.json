{"ast":null,"code":"// import React, { Component } from 'react';\n// import './App.css';\n// /*\n// Screen:LoginScreen\n// Loginscreen is the main screen which the user is shown on first visit to page and after\n// hitting logout\n// */\n// import LoginScreen from './Loginscreen';\n// /*\n// Module:Material-UI\n// Material-UI is used for designing ui of the app\n// */\n// import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\n// import AppBar from 'material-ui/AppBar';\n// import RaisedButton from 'material-ui/RaisedButton';\n// import Drawer from 'material-ui/Drawer';\n// import MenuItem from 'material-ui/MenuItem';\n// import FontIcon from 'material-ui/FontIcon';\n// import {blue500, red500, greenA200} from 'material-ui/styles/colors';\n// /*\n// Module:Dropzone\n// Dropzone is used for local file selection\n// */\n// import Dropzone from 'react-dropzone';\n// var apiBaseUrl = \"http://localhost:4000/api/\";\n// /*\n// Module:superagent\n// superagent is used to handle post/get requests to server\n// */\n// var request = require('superagent');\n// class UploadScreen extends Component {\n//   constructor(props){\n//     super(props);\n//     this.state={\n//       role:'student',\n//       filesPreview:[],\n//       filesToBeSent:[],\n//       draweropen:false,\n//       printcount:10,\n//       printingmessage:'',\n//       printButtonDisabled:false\n//     }\n//   }\n//   componentWillMount(){\n//     // console.log(\"prop values\",this.props.role);\n//     var printcount;\n//     //set upload limit based on user role\n//     if(this.props.role){\n//       if(this.props.role == 'student'){\n//         printcount = 5;\n//       }\n//       else if(this.props.role == 'teacher'){\n//         printcount =10;\n//       }\n//     }\n//     this.setState({printcount,role:this.props.role});\n//   }\n//   /*\n//   Function:handleCloseClick\n//   Parameters: event,index\n//   Usage:This fxn is used to remove file from filesPreview div\n//   if user clicks close icon adjacent to selected file\n//   */ \n//   handleCloseClick(event,index){\n//     // console.log(\"filename\",index);\n//     var filesToBeSent=this.state.filesToBeSent;\n//     filesToBeSent.splice(index,1);\n//     // console.log(\"files\",filesToBeSent);\n//     var filesPreview=[];\n//     for(var i in filesToBeSent){\n//       filesPreview.push(<div>\n//         {filesToBeSent[i][0].name}\n//         <MuiThemeProvider>\n//         <a href=\"#\"><FontIcon\n//           className=\"material-icons customstyle\"\n//           color={blue500}\n//           onClick={(event) => this.handleCloseClick(event,i)}\n//         >clear</FontIcon></a>\n//         </MuiThemeProvider>\n//         </div>\n//       )\n//     }\n//     this.setState({filesToBeSent,filesPreview});\n//   }\n//   /*\n//   Function:onDrop\n//   Parameters: acceptedFiles, rejectedFiles\n//   Usage:This fxn is default event handler of react drop-Dropzone\n//   which is modified to update filesPreview div\n//   */\n//   onDrop(acceptedFiles, rejectedFiles) {\n//       // console.log('Accepted files: ', acceptedFiles[0].name);\n//       var filesToBeSent=this.state.filesToBeSent;\n//       if(filesToBeSent.length < this.state.printcount){\n//         filesToBeSent.push(acceptedFiles);\n//         var filesPreview=[];\n//         for(var i in filesToBeSent){\n//           filesPreview.push(<div>\n//             {filesToBeSent[i][0].name}\n//             <MuiThemeProvider>\n//             <a href=\"#\"><FontIcon\n//               className=\"material-icons customstyle\"\n//               color={blue500}\n//               styles={{ top:10,}}\n//               onClick={(event) => this.handleCloseClick(event,i)}\n//             >clear</FontIcon></a>\n//             </MuiThemeProvider>\n//             </div>\n//           )\n//         }\n//         this.setState({filesToBeSent,filesPreview});\n//       }\n//       else{\n//         alert(\"You have reached the limit of printing files at a time\")\n//       }\n//       // console.log('Rejected files: ', rejectedFiles);\n// }\n// /*\n//   Function:handleClick\n//   Parameters: event\n//   Usage:This fxn is handler of submit button which is responsibel fo rhandling file uploads\n//   to backend\n// */\n// handleClick(event){\n//   // console.log(\"handleClick\",event);\n//   this.setState({printingmessage:\"Please wait until your files are being printed\",printButtonDisabled:true})\n//   var self = this;\n//   if(this.state.filesToBeSent.length>0){\n//     var filesArray = this.state.filesToBeSent;\n//     var req = request.post(apiBaseUrl+'fileprint');\n//     for(var i in filesArray){\n//         // console.log(\"files\",filesArray[i][0]);\n//         req.attach(filesArray[i][0].name,filesArray[i][0])\n//     }\n//     req.end(function(err,res){\n//       if(err){\n//         console.log(\"error ocurred\");\n//       }\n//       console.log(\"res\",res);\n//       self.setState({printingmessage:'',printButtonDisabled:false,filesToBeSent:[],filesPreview:[]});\n//       alert(\"File printing completed\")\n//       // self.props.indexthis.switchPage();\n//     });\n//   }\n//   else{\n//     alert(\"Please upload some files first\");\n//   }\n// }\n// /*\n//   Function:toggleDrawer\n//   Parameters: event\n//   Usage:This fxn is used to toggle drawer state\n//   */\n// toggleDrawer(event){\n//   // console.log(\"drawer click\");\n//   this.setState({draweropen: !this.state.draweropen})\n// }\n// /*\n//   Function:toggleDrawer\n//   Parameters: event\n//   Usage:This fxn is used to close the drawer when user clicks anywhere on the \n//   main div\n//   */\n// handleDivClick(event){\n//   // console.log(\"event\",event);\n//   if(this.state.draweropen){\n//     this.setState({draweropen:false})\n//   }\n// }\n// /*\n//   Function:handleLogout\n//   Parameters: event\n//   Usage:This fxn is used to end user session and redirect the user back to login page\n//   */\n// handleLogout(event){\n//   // console.log(\"logout event fired\",this.props);\n//   var loginPage =[];\n//   loginPage.push(<LoginScreen appContext={this.props.appContext}/>);\n//   this.props.appContext.setState({loginPage:loginPage,uploadScreen:[]})\n// }\n//   render() {\n//     return (\n//       <div className=\"App\">\n//           <div onClick={(event) => this.handleDivClick(event)}>\n//           <center>\n//           <div>\n//             You can print upto {this.state.printcount} files at a time since you are {this.state.role}\n//           </div>\n//           <Dropzone onDrop={(files) => this.onDrop(files)}>\n//                 <div>Try dropping some files here, or click to select files to upload.</div>\n//           </Dropzone>\n//           <div>\n//           Files to be printed are:\n//           {this.state.filesPreview}\n//           </div>\n//           </center>\n//           <div>\n//           {this.state.printingmessage}\n//           </div>\n//       <MuiThemeProvider>\n//            <RaisedButton disabled={this.state.printButtonDisabled} label=\"Print Files\" primary={true} style={style} onClick={(event) => this.handleClick(event)}/>\n//       </MuiThemeProvider>\n//           </div>\n//           </div>\n//     );\n//   }\n// }\n// const style = {\n//   margin: 15,\n// };\n// export default UploadScreen;","map":{"version":3,"sources":["C:/Users/kbzdz/Documents/currency/Biblioteka/library/src/UploadScreen.js"],"names":[],"mappingssourcesContent":["// import React, { Component } from 'react';\r\n// import './App.css';\r\n// /*\r\n// Screen:LoginScreen\r\n// Loginscreen is the main screen which the user is shown on first visit to page and after\r\n// hitting logout\r\n// */\r\n// import LoginScreen from './Loginscreen';\r\n// /*\r\n// Module:Material-UI\r\n// Material-UI is used for designing ui of the app\r\n// */\r\n// import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\n// import AppBar from 'material-ui/AppBar';\r\n// import RaisedButton from 'material-ui/RaisedButton';\r\n// import Drawer from 'material-ui/Drawer';\r\n// import MenuItem from 'material-ui/MenuItem';\r\n// import FontIcon from 'material-ui/FontIcon';\r\n// import {blue500, red500, greenA200} from 'material-ui/styles/colors';\r\n\r\n\r\n// /*\r\n// Module:Dropzone\r\n// Dropzone is used for local file selection\r\n// */\r\n// import Dropzone from 'react-dropzone';\r\n// var apiBaseUrl = \"http://localhost:4000/api/\";\r\n// /*\r\n// Module:superagent\r\n// superagent is used to handle post/get requests to server\r\n// */\r\n// var request = require('superagent');\r\n\r\n// class UploadScreen extends Component {\r\n//   constructor(props){\r\n//     super(props);\r\n//     this.state={\r\n//       role:'student',\r\n//       filesPreview:[],\r\n//       filesToBeSent:[],\r\n//       draweropen:false,\r\n//       printcount:10,\r\n//       printingmessage:'',\r\n//       printButtonDisabled:false\r\n//     }\r\n//   }\r\n//   componentWillMount(){\r\n//     // console.log(\"prop values\",this.props.role);\r\n//     var printcount;\r\n//     //set upload limit based on user role\r\n//     if(this.props.role){\r\n//       if(this.props.role == 'student'){\r\n//         printcount = 5;\r\n//       }\r\n//       else if(this.props.role == 'teacher'){\r\n//         printcount =10;\r\n//       }\r\n//     }\r\n//     this.setState({printcount,role:this.props.role});\r\n//   }\r\n//   /*\r\n//   Function:handleCloseClick\r\n//   Parameters: event,index\r\n//   Usage:This fxn is used to remove file from filesPreview div\r\n//   if user clicks close icon adjacent to selected file\r\n//   */ \r\n//   handleCloseClick(event,index){\r\n//     // console.log(\"filename\",index);\r\n//     var filesToBeSent=this.state.filesToBeSent;\r\n//     filesToBeSent.splice(index,1);\r\n//     // console.log(\"files\",filesToBeSent);\r\n//     var filesPreview=[];\r\n//     for(var i in filesToBeSent){\r\n//       filesPreview.push(<div>\r\n//         {filesToBeSent[i][0].name}\r\n//         <MuiThemeProvider>\r\n//         <a href=\"#\"><FontIcon\r\n//           className=\"material-icons customstyle\"\r\n//           color={blue500}\r\n//           onClick={(event) => this.handleCloseClick(event,i)}\r\n//         >clear</FontIcon></a>\r\n//         </MuiThemeProvider>\r\n//         </div>\r\n//       )\r\n//     }\r\n//     this.setState({filesToBeSent,filesPreview});\r\n//   }\r\n//   /*\r\n//   Function:onDrop\r\n//   Parameters: acceptedFiles, rejectedFiles\r\n//   Usage:This fxn is default event handler of react drop-Dropzone\r\n//   which is modified to update filesPreview div\r\n//   */\r\n//   onDrop(acceptedFiles, rejectedFiles) {\r\n//       // console.log('Accepted files: ', acceptedFiles[0].name);\r\n//       var filesToBeSent=this.state.filesToBeSent;\r\n//       if(filesToBeSent.length < this.state.printcount){\r\n//         filesToBeSent.push(acceptedFiles);\r\n//         var filesPreview=[];\r\n//         for(var i in filesToBeSent){\r\n//           filesPreview.push(<div>\r\n//             {filesToBeSent[i][0].name}\r\n//             <MuiThemeProvider>\r\n//             <a href=\"#\"><FontIcon\r\n//               className=\"material-icons customstyle\"\r\n//               color={blue500}\r\n//               styles={{ top:10,}}\r\n//               onClick={(event) => this.handleCloseClick(event,i)}\r\n//             >clear</FontIcon></a>\r\n//             </MuiThemeProvider>\r\n//             </div>\r\n//           )\r\n//         }\r\n//         this.setState({filesToBeSent,filesPreview});\r\n//       }\r\n//       else{\r\n//         alert(\"You have reached the limit of printing files at a time\")\r\n//       }\r\n\r\n//       // console.log('Rejected files: ', rejectedFiles);\r\n// }\r\n// /*\r\n//   Function:handleClick\r\n//   Parameters: event\r\n//   Usage:This fxn is handler of submit button which is responsibel fo rhandling file uploads\r\n//   to backend\r\n// */\r\n// handleClick(event){\r\n//   // console.log(\"handleClick\",event);\r\n//   this.setState({printingmessage:\"Please wait until your files are being printed\",printButtonDisabled:true})\r\n//   var self = this;\r\n//   if(this.state.filesToBeSent.length>0){\r\n//     var filesArray = this.state.filesToBeSent;\r\n//     var req = request.post(apiBaseUrl+'fileprint');\r\n//     for(var i in filesArray){\r\n//         // console.log(\"files\",filesArray[i][0]);\r\n//         req.attach(filesArray[i][0].name,filesArray[i][0])\r\n//     }\r\n//     req.end(function(err,res){\r\n//       if(err){\r\n//         console.log(\"error ocurred\");\r\n//       }\r\n//       console.log(\"res\",res);\r\n//       self.setState({printingmessage:'',printButtonDisabled:false,filesToBeSent:[],filesPreview:[]});\r\n//       alert(\"File printing completed\")\r\n//       // self.props.indexthis.switchPage();\r\n//     });\r\n//   }\r\n//   else{\r\n//     alert(\"Please upload some files first\");\r\n//   }\r\n// }\r\n// /*\r\n//   Function:toggleDrawer\r\n//   Parameters: event\r\n//   Usage:This fxn is used to toggle drawer state\r\n//   */\r\n// toggleDrawer(event){\r\n//   // console.log(\"drawer click\");\r\n//   this.setState({draweropen: !this.state.draweropen})\r\n// }\r\n// /*\r\n//   Function:toggleDrawer\r\n//   Parameters: event\r\n//   Usage:This fxn is used to close the drawer when user clicks anywhere on the \r\n//   main div\r\n//   */\r\n// handleDivClick(event){\r\n//   // console.log(\"event\",event);\r\n//   if(this.state.draweropen){\r\n//     this.setState({draweropen:false})\r\n//   }\r\n// }\r\n// /*\r\n//   Function:handleLogout\r\n//   Parameters: event\r\n//   Usage:This fxn is used to end user session and redirect the user back to login page\r\n//   */\r\n// handleLogout(event){\r\n//   // console.log(\"logout event fired\",this.props);\r\n//   var loginPage =[];\r\n//   loginPage.push(<LoginScreen appContext={this.props.appContext}/>);\r\n//   this.props.appContext.setState({loginPage:loginPage,uploadScreen:[]})\r\n// }\r\n//   render() {\r\n//     return (\r\n//       <div className=\"App\">\r\n//           <div onClick={(event) => this.handleDivClick(event)}>\r\n//           <center>\r\n//           <div>\r\n//             You can print upto {this.state.printcount} files at a time since you are {this.state.role}\r\n//           </div>\r\n\r\n//           <Dropzone onDrop={(files) => this.onDrop(files)}>\r\n//                 <div>Try dropping some files here, or click to select files to upload.</div>\r\n//           </Dropzone>\r\n//           <div>\r\n//           Files to be printed are:\r\n//           {this.state.filesPreview}\r\n//           </div>\r\n//           </center>\r\n//           <div>\r\n//           {this.state.printingmessage}\r\n//           </div>\r\n//       <MuiThemeProvider>\r\n//            <RaisedButton disabled={this.state.printButtonDisabled} label=\"Print Files\" primary={true} style={style} onClick={(event) => this.handleClick(event)}/>\r\n//       </MuiThemeProvider>\r\n//           </div>\r\n//           </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const style = {\r\n//   margin: 15,\r\n// };\r\n\r\n// export default UploadScreen;"]},"metadata":{},"sourceType":"module"}